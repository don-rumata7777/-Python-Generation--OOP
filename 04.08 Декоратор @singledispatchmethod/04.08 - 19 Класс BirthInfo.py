# "–ü–æ–∫–æ–ª–µ–Ω–∏–µ Python": –û–û–ü
# 4.8 –î–µ–∫–æ—Ä–∞—Ç–æ—Ä @singledispatchmethod

# –ö–ª–∞—Å—Å BirthInfo üå∂Ô∏è

# –†–µ–∞–ª–∏–∑—É–π—Ç–µ –∫–ª–∞—Å—Å BirthInfo, –æ–ø–∏—Å—ã–≤–∞—é—â–∏–π –¥–∞–Ω–Ω—ã–µ –æ –¥–∞—Ç–µ —Ä–æ–∂–¥–µ–Ω–∏—è. –ü—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ 
# –∫–ª–∞—Å—Å –¥–æ–ª–∂–µ–Ω –ø—Ä–∏–Ω–∏–º–∞—Ç—å –æ–¥–∏–Ω –∞—Ä–≥—É–º–µ–Ω—Ç:
# birth_date ‚Äî –¥–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω–∞—è –≤ –æ–¥–Ω–æ–º –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤:
# —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ date
# —Å—Ç—Ä–æ–∫–∞ —Å –¥–∞—Ç–æ–π –≤ ISO —Ñ–æ—Ä–º–∞—Ç–µ
# —Å–ø–∏—Å–æ–∫ –∏–ª–∏ –∫–æ—Ä—Ç–µ–∂ –∏–∑ —Ç—Ä–µ—Ö —Ü–µ–ª—ã—Ö —á–∏—Å–µ–ª: –≥–æ–¥–∞, –º–µ—Å—è—Ü–∞ –∏ –¥–Ω—è

# –ï—Å–ª–∏ –¥–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è —è–≤–ª—è–µ—Ç—Å—è –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π –∏–ª–∏ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∞ –≤ –∫–∞–∫–æ–º-–ª–∏–±–æ –¥—Ä—É–≥–æ–º —Ñ–æ—Ä–º–∞—Ç–µ, 
# –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –≤–æ–∑–±—É–∂–¥–µ–Ω–æ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ TypeError —Å —Ç–µ–∫—Å—Ç–æ–º:
# –ê—Ä–≥—É–º–µ–Ω—Ç –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–≥–æ —Ç–∏–ø–∞ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è

# –≠–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ BirthInfo –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –æ–¥–∏–Ω –∞—Ç—Ä–∏–±—É—Ç:
# birth_date ‚Äî –¥–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è –≤ –≤–∏–¥–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –∫–ª–∞—Å—Å–∞ date

# –ö–ª–∞—Å—Å BirthInfo –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –æ–¥–Ω–æ —Å–≤–æ–π—Å—Ç–≤–æ:
# age ‚Äî —Å–≤–æ–π—Å—Ç–≤–æ, –¥–æ—Å—Ç—É–ø–Ω–æ–µ —Ç–æ–ª—å–∫–æ –¥–ª—è —á—Ç–µ–Ω–∏—è, –≤–æ–∑–≤—Ä–∞—â–∞—é—â–µ–µ —Ç–µ–∫—É—â–∏–π –≤–æ–∑—Ä–∞—Å—Ç –≤ –≥–æ–¥–∞—Ö, —Ç–æ –µ—Å—Ç—å 
# –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª–Ω—ã—Ö –ª–µ—Ç, –ø—Ä–æ—à–µ–¥—à–∏—Ö —Å –¥–∞—Ç—ã —Ä–æ–∂–¥–µ–Ω–∏—è –Ω–∞ —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –¥–µ–Ω—å

# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 1. –í–æ–∑—Ä–∞—Å—Ç –≤ –≥–æ–¥–∞—Ö –¥–æ–ª–∂–µ–Ω –≤—ã—á–∏—Å–ª—è—Ç—å—Å—è —Ç–∞–∫ –∂–µ, –∫–∞–∫ –∏ –æ–±—ã—á–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç —á–µ–ª–æ–≤–µ–∫–∞, 
# —Ç–æ –µ—Å—Ç—å –≤ –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è –µ–≥–æ –≤–æ–∑—Ä–∞—Å—Ç —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç—Å—è –Ω–∞ –æ–¥–∏–Ω –≥–æ–¥.

# –ü—Ä–∏–≤–µ–¥–µ–Ω–Ω—ã–π –Ω–∏–∂–µ –∫–æ–¥:

# birthinfo = BirthInfo(date(2023, 2, 26))

# print(birthinfo.age)

# –≤ 2024-02-25 –¥–æ–ª–∂–µ–Ω –≤—ã–≤–æ–¥–∏—Ç—å:
# 0
# –≤ 2024-02-26 –¥–æ–ª–∂–µ–Ω –≤—ã–≤–æ–¥–∏—Ç—å:
# 1
# –≤ 2025-02-25 –¥–æ–ª–∂–µ–Ω –≤—ã–≤–æ–¥–∏—Ç—å:
# 1
#  –≤ 2025-02-26 –¥–æ–ª–∂–µ–Ω –≤—ã–≤–æ–¥–∏—Ç—å:
# 2

# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 2. –î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–æ–≥–æ, —á—Ç–æ —Å–≤–æ–π—Å—Ç–≤–æ age –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤–µ—Ä–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç, –º—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º 
# —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é current_age(), –∫–æ—Ç–æ—Ä–∞—è –≤—ã—á–∏—Å–ª—è–µ—Ç –≤–æ–∑—Ä–∞—Å—Ç –≤ –≥–æ–¥–∞—Ö –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞—Ç—ã 
# —Ä–æ–∂–¥–µ–Ω–∏—è –∏ —Ç–µ–∫—É—â–µ–π –¥–∞—Ç—ã.

# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 3. –ù–∏–∫–∞–∫–∏—Ö –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –∫–∞—Å–∞—Ç–µ–ª—å–Ω–æ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–ª–∞—Å—Å–∞ BirthInfo –Ω–µ—Ç, –æ–Ω–∞ –º–æ–∂–µ—Ç 
# –±—ã—Ç—å –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–π.

# Sample Input 1:

# birthinfo1 = BirthInfo('2020-09-18')
# birthinfo2 = BirthInfo(date(2010, 10, 10))
# birthinfo3 = BirthInfo([2016, 1, 1])

# print(birthinfo1.birth_date)
# print(birthinfo2.birth_date)
# print(birthinfo3.birth_date)

# Sample Output 1:

# 2020-09-18
# 2010-10-10
# 2016-01-01

# Sample Input 2:

# birthday = date(2020, 9, 18)
# today = date.today()
# birthinfo = BirthInfo(birthday)
# true_age = current_age(birthday, today)

# print(birthinfo.age == true_age)

# Sample Output 2:

# True

##############################################################################################

# relativedelta –∏–∑ –º–æ–¥—É–ª—è dateutil –¥–ª—è –ö–û–†–†–ï–ö–¢–ù–û–ô —Ä–∞–∑–Ω–∏—Ü—ã –º–µ–∂–¥—É –¥–≤—É–º—è –¥–∞—Ç–∞–º–∏
from functools import singledispatchmethod
from datetime import date
from dateutil.relativedelta import relativedelta


class BirthInfo:

    @singledispatchmethod
    def __init__(self, birth_date):
        raise TypeError("–ê—Ä–≥—É–º–µ–Ω—Ç –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–≥–æ —Ç–∏–ø–∞ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è")

    @__init__.register(date)
    def _date__init__(self, birth_date):
        self.birth_date = birth_date

    @__init__.register(str)
    def _date__init__(self, birth_date):
        try:
            self.birth_date = date.fromisoformat(birth_date)
        except:
            raise TypeError("–ê—Ä–≥—É–º–µ–Ω—Ç –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–≥–æ —Ç–∏–ø–∞ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è")

    @__init__.register(list)
    @__init__.register(tuple)
    def _date__init__(self, birth_date):
        try:
            self.birth_date = date(*birth_date)
        except:
            raise TypeError("–ê—Ä–≥—É–º–µ–Ω—Ç –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–≥–æ —Ç–∏–ø–∞ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è")

    @property
    def age(self):
        return relativedelta(date.today(), self.birth_date).years
